-- TBO Source

local Library =
loadstring(game:HttpGet("https://pastebinp.com/raw/vdc16Dh7"))();

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ScreenGui"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0, 90, 0, 38)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextColor3 = Color3.fromRGB(248, 248, 248)
Toggle.TextSize = 22.000
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

local Corner = Instance.new("UICorner")
Corner.Name = "Corner"
Corner.Parent = Toggle

local Window = Library.CreateLib("lorb da hood gui (Pro)", "DarkTheme")

local Tab = Window:NewTab("Main")
local Section = Tab:NewSection("Main")

Section:NewTextBox("Speed", "TextboxInfo", function(txt)
    -- Add the provided code snippet here
    local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
    Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        Humanoid.WalkSpeed = _G.WS
    end)
    Humanoid.WalkSpeed = _G.WS
    wait(1)
    _G.WS = tonumber(txt) or _G.WS -- Update _G.WS with the inputted value or keep it as is
end)

Section:NewTextBox("JumpPower", "Changes how high you jump.", function(txt)
    _G.JP = tonumber(txt) or _G.JP -- Update _G.JP with the inputted value or keep it as is
    local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
    Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        Humanoid.JumpPower = _G.JP
    end)
    Humanoid.JumpPower = _G.JP
end)

Section:NewTextBox("DropCash", "TextboxInfo", function(txt)
game.ReplicatedStorage.MainEvent:FireServer("DropMoney",txt)
end)

Section:NewButton("Chat Spy", "ButtonInfo", function()
loadstring(game:HttpGet("https://pastebinp.com/raw/YfcHkZ3f"))()
end)

Section:NewButton("Pick All Knife/Lockpick", "ButtonInfo", function()
char = game:GetService('Players').LocalPlayer.Character
				-------------------------------------
				function GetKnife()
					wait(.1)
					char.HumanoidRootPart.CFrame = CFrame.new(-680.2, 19.75, -254.97)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-115.495, 19.756, -453.45)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-418.208, 19.25, -748.694)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-418.208, 19.25, -748.694)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-265.9871520996094, 22.0657901763916, -268.7344055175781)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(33, 19.75, -184.6)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(243.495, 62, -450.5)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-103.53, 19.75, -220.21)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-581.775, 19.7549, -485.23)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-534.9291381835938, 21.74999237060547, 242.1298828125)
					wait()
					char.HumanoidRootPart.CFrame = CFrame.new(-399.655, 19.7552, -461.55)
					wait()
				end

				wait()
				local X = char.HumanoidRootPart.CFrame.X
				local Y = char.HumanoidRootPart.CFrame.Y
				local Z = char.HumanoidRootPart.CFrame.Z
				GetKnife()
				repeat GetKnife() until plr.Backpack:FindFirstChild('[Knife]') and plr.Backpack:FindFirstChild('[LockPicker]')
				char.HumanoidRootPart.CFrame = CFrame.new(X,Y+5,Z)
end)

Section:NewTextBox("MaxZoom", "TextboxInfo", function(txt)
game.Players.LocalPlayer.CameraMaxZoomDistance = (txt)
end)

Section:NewButton("PP Bat", "Buttoninfo", function()
local savepos = game.Players.LocalPlayer.Character.UpperTorso.Position
             local Brokie = game.Workspace.Ignored.Shop["[Bat] - $265"]
             game.Players.LocalPlayer.Character:MoveTo(Brokie.Head.Position)
             wait(0.25)
             fireclickdetector(Brokie.ClickDetector)
             wait(0.25)
         game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(savepos)
         wait(.25)
     local surg = game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]")
      surg.Parent = game.Players.LocalPlayer.Character
      local New = game.Players.LocalPlayer.Character:FindFirstChild("[Bat]")
       New.Parent = game.Players.LocalPlayer.Backpack

game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]").GripPos = Vector3.new(-1.5,-1,1.55)
    game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]").GripForward = Vector3.new(0, 0, 0)
    game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]").GripRight = Vector3.new(0.19607843458652496, 0.019607843831181526, 0.9803922176361084)

game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]").GripUp = Vector3.new(-0.9755268096923828, -0.09755268692970276, 0.19705550372600555)

game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]")
    game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]")
    game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]")
    game.Players.LocalPlayer.Backpack:FindFirstChild("[Bat]")
    game.Players.LocalPlayer.Backpack["[Bat]"].Parent = game.Players.LocalPlayer.Character
end)

Section:NewButton("PP StopSign", "Buttoninfo", function()
local d = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    local k = game.Workspace.Ignored.Shop["[StopSign] - $318"]
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = k.Head.CFrame + Vector3.new(0, 3, 0)
    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - k.Head.Position).Magnitude <= 50 then
        wait(.2)
        fireclickdetector(k:FindFirstChild("ClickDetector"), 4)
        toolf = game.Players.LocalPlayer.Backpack:WaitForChild("[StopSign]")
        toolf.Parent = game.Players.LocalPlayer.Character
        end
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(d)
wait()
local Plr = game.Players.LocalPlayer
local LastPos = Plr.Character.HumanoidRootPart.CFrame
local pp = Plr.Character["[StopSign]"]
wait(0.1)
pp.Sign:Destroy()
--pp.GripRight = Vector3.new(0, 0, 1)
--pp.GripForward = Vector3.new(1, 0, 0)
--pp.GripUp = Vector3.new(0, 1, 0)
--pp.GripPos = Vector3.new(-1, 2, 1.45)

pp.Grip = CFrame.new(-1, 2, 1.45000005, 0, -0, -1, -0, 1, -0, 1, 0, -0)
end)



Section:NewButton("Anti Exploiters press X", "Anti Exploiters", function()
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Anti Exploiters"

local function respawnTool()
    local backpack = player.Backpack
    local existingTool = backpack:FindFirstChild(tool.Name)
    if not existingTool then
        tool.Parent = backpack
    end
end

tool.Activated:Connect(function()
    local pos = mouse.Hit + Vector3.new(0, 2.5, 0)
    pos = CFrame.new(pos.X, pos.Y, pos.Z)
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, "X", false, game)
end)

player.CharacterAdded:Connect(respawnTool)

respawnTool() -- Make sure tool persists if character already exists

local FINOBE_KEYBIND = "X"

getgenv().Finobe1 = true 
local NewCFrame = CFrame.new
local LocalFinobe = game.Players.LocalPlayer
local InputService = game:GetService("UserInputService")
local Runfinobe = game:GetService("RunService")

local Finobe2; 
Runfinobe.heartbeat:Connect(function()
    if LocalFinobe.Character then 
        local FinobeChar = LocalFinobe.Character.HumanoidRootPart
        local Offset = FinobeChar.CFrame * NewCFrame(9e9, 0/0, math.huge)
        
        if getgenv().Finobe1 then 
            Finobe2 = FinobeChar.CFrame
            FinobeChar.CFrame = Offset
            Runfinobe.RenderStepped:Wait()
            FinobeChar.CFrame = Finobe2
        end 
    end 
end)

InputService.InputBegan:Connect(function(sigma)
    if sigma.KeyCode == Enum.KeyCode[FINOBE_KEYBIND] then 
        getgenv().Finobe1 = not getgenv().Finobe1
        
        if not Finobe1 then 
            LocalFinobe.Character.HumanoidRootPart.CFrame = Finobe2
            -- 
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Destroy Exploiters";
                Text = "Disabled";
            })
        else 
            Finobe2 = nil 
            -- 
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Destroy Exploiters";
                Text = "Enabled";
            })
        end 
    end 
end)    

local finobeHookSigmaChatWtfCreateRemindedMeAboutThisShittyAssExploitBtw_MiseryOwnerIsACuck
finobeHookSigmaChatWtfCreateRemindedMeAboutThisShittyAssExploitBtw_MiseryOwnerIsACuck = hookmetamethod(game, "__index", newcclosure(function(self, key)
    if not checkcaller() then
        if key == "CFrame" and getgenv().Finobe1 and LocalFinobe.Character and LocalFinobe.Character:FindFirstChild("HumanoidRootPart") and LocalFinobe.Character:FindFirstChild("Humanoid") and LocalFinobe.Character:FindFirstChild("Humanoid").Health > 0 then
            if self == LocalFinobe.Character.HumanoidRootPart and Finobe2 ~= nil then
                return Finobe2
            end
        end
    end
    -- 
    return finobeHookSigmaChatWtfCreateRemindedMeAboutThisShittyAssExploitBtw_MiseryOwnerIsACuck(self, key)
end))
end)

Section:NewButton("show masked players", "see people names with mask", function()

for i,v in pairs(game.Workspace.Players:GetChildren()) do
        v:FindFirstChildWhichIsA('Humanoid').DisplayDistanceType = 'Subject'
    end
end)


local Tab = Window:NewTab("Tools")
local Section = Tab:NewSection("Tools")


Section:NewButton("one kick", "one kick", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

    local Player = game.Players.LocalPlayer
    local Swing1 = Instance.new('Animation', game.ReplicatedStorage)
    Swing1.AnimationId = 'rbxassetid://8254794168'

    local Swing2 = Instance.new('Animation', game.ReplicatedStorage)
    Swing2.AnimationId = 'rbxassetid://8254792138'

    local Swing3 = Instance.new('Animation', game.ReplicatedStorage)
    Swing3.AnimationId = 'rbxassetid://8254789608'

    local Swing4 = Instance.new('Animation', game.ReplicatedStorage)
    Swing4.AnimationId = 'rbxassetid://8254787838'

    local Swing5 = Instance.new('Animation', game.ReplicatedStorage)
    Swing5.AnimationId = 'rbxassetid://2788307715'

    local _1 = Player.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Swing1)
    local _2 = Player.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Swing2)
    local _3 = Player.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Swing3)
    local _4 = Player.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Swing4)
    local _5 = Player.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(Swing5)

    game:GetService('RunService'):BindToRenderStep("crash", 0 , function()
        for _, v in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
            if (v.Animation.AnimationId:match("rbxassetid://2788309982")) then
                v:Stop(0);
                _2:Stop()
                _3:Stop()
                _1:Play()
                _4:Stop()
                _1:AdjustSpeed(2.4)    
            elseif (v.Animation.AnimationId:match("rbxassetid://2788311138")) then
                v:Stop(0);
                _1:Stop()
                _3:Stop()
                _2:Play()
                _4:Stop()
                _2:AdjustSpeed(2.4)
            elseif (v.Animation.AnimationId:match("rbxassetid://2788306916")) then
                v:Stop(0);
                _1:Stop()
                _3:Stop()
                _2:Play()
                _4:Stop()
                _2:AdjustSpeed(2.4)
            elseif (v.Animation.AnimationId:match("rbxassetid://2788305271")) then
                v:Stop(0);
                _1:Stop()
                _3:Stop()
                _2:Play()
                _4:Stop()
                _2:AdjustSpeed(2.4)
            elseif (v.Animation.AnimationId:match("rbxassetid://2788308661")) then
                v:Stop(0);
                _1:Stop()
                _2:Stop()
                _3:Play()
                _4:Stop()
                _3:AdjustSpeed(2.4)
            elseif (v.Animation.AnimationId:match("rbxassetid://2788309317")) then
                v:Stop(0);
                _1:Stop()
                _2:Stop()
                _3:Stop()
                _4:Play()
                _4:AdjustSpeed(2.4)
            elseif (v.Animation.AnimationId:match("rbxassetid://2788289281")) then
                v:Stop(0);
            elseif (v.Animation.AnimationId:match("rbxassetid://2788292075")) then
                v:Stop(0);
                _2:Stop()
                _3:Stop()
                _1:Stop()
                _5:Play()
                _4:Stop()
                _5:AdjustSpeed(2.4) 
            elseif (v.Animation.AnimationId:match("rbxassetid://3354699999")) then
                v:Stop(0);
                _1:Stop()
                _3:Stop()
                _2:Play()
                _4:Stop()
                _2:AdjustSpeed(2.4)
            end;
        end
    end)

    game:GetService("RunService").heartbeat:Connect(function()
        for _, v in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
            if (v.Animation.AnimationId:match("rbxassetid://2809419094"))
            or (v.animation.AnimationId:match("rbxassetid://2877910736"))
            or (v.animation.AnimationId:match("rbxassetid://2809413000")) then
                v:Stop()
            end
        end
    end)

    function kick()
        local KIckAnim = Instance.new('Animation');
        KIckAnim.AnimationId = "rbxassetid://8254765806";--3354696735
            tool = Instance.new("Tool")
            tool.RequiresHandle = false
            tool.Name = "one kick"
            tool.Activated:Connect(function()
                game.Players.LocalPlayer.Backpack["Combat"].Parent = game.Players.LocalPlayer.Character
                game.ReplicatedStorage.MainEvent:FireServer("ChargeButton")
                wait(1)
           Play(6073433216)
            wait(0.1)
            Call()
            end)
            tool.Parent = game.Players.LocalPlayer.Backpack
        end;
        game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR');
        kick()
end)


Section:NewButton("throw fling", "fling the grabbed person", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

                    function kick()
                        local KIckAnim = Instance.new('Animation');
                        KIckAnim.AnimationId = "rbxassetid://3096047107";
                            tool = Instance.new("Tool")
                            tool.RequiresHandle = false
                            tool.Name = "Super Throw"
                            tool.Activated:Connect(function()
                                game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(KIckAnim):Play()
                                wait(0.3)
                               Play(2174940386)
                                game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
                            end)
                            tool.Parent = game.Players.LocalPlayer.Backpack
                    
                        end;
                        game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR');
                        kick()
                    
                        getgenv().POWERFLING = 800
                    
                     
                    
                        game:GetService("RunService").heartbeat:Connect(function()
                            for _, v in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
                                if (v.Animation.AnimationId:match("rbxassetid://3096047107")) then
                                    local Vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector.X*getgenv().POWERFLING,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector.Z*getgenv().POWERFLING)
                                    game:GetService("RunService").RenderStepped:Wait()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vel
                                end
                            end
                        end)
                end)

Section:NewButton("instant throw", "fling the grabbed person", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

                    function kick()
                        local KIckAnim = Instance.new('Animation');
                        KIckAnim.AnimationId = "rbxassetid://3096047107";
                            tool = Instance.new("Tool")
                            tool.RequiresHandle = false
                            tool.Name = "Throw"
                            tool.Activated:Connect(function()
                                game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(KIckAnim):Play()
                                wait(.1)
                                for i , v in pairs(game.Players[tostring(game.Players.LocalPlayer.Character.BodyEffects.Grabbed.Value)].Character:GetChildren()) do
                                    if v:IsA("MeshPart") then
                                        v.CFrame =  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(100, 0, 0)
                                    end
                                    end
                                wait(0.1)
                                game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
                                Ringtone(2174940386)
                            end)
                            tool.Parent = game.Players.LocalPlayer.Backpack
                    
                        end;
                        game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR');
                        kick()
                    
                        getgenv().POWERFLING = 400
                    
                     
                    
                        game:GetService("RunService").heartbeat:Connect(function()
                            for _, v in next, game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
                                if (v.Animation.AnimationId:match("rbxassetid://3096047107")) then
                                    local Vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector.X*getgenv().POWERFLING,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector.Z*getgenv().POWERFLING)
                                    game:GetService("RunService").RenderStepped:Wait()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vel
                                end
                            end
                        end)
                end)


local Tab = Window:NewTab("troll")
local Section = Tab:NewSection("troll")



Section:NewButton("rape v4", "idk", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                Character.Humanoid:LoadAnimation(IM.RightAim):Play()
                Character.Humanoid:LoadAnimation(IM.LeftAim):Play()
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 10), Vector3.new(90, 545, 0))
                
                spawn(function()
                    while Ins.Parent ~= nil do
                        task.wait()
                        local Sine = tick() * 60
                        
                        AT1.Position = Vector3.new(0, -1.2, -4 + 1 * math.sin(Sine / 8))
                    end
                end)
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("kiss grab", "kiss grab", function()
    local LocalPlayer = game.Players.LocalPlayer
local Character = LocalPlayer.Character

local IM = game:GetService("ReplicatedStorage").IM.ANIM

local PlayersChar = workspace.Players

if _G.JOINTWATCHER then
    _G.JOINTWATCHER:Disconnect()
end

local function Align(P0, P1, P, R)
    local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
    
    local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
    
    A1.Position = P
    A0.Rotation = R
    
    AP.RigidityEnabled = true
    AP.Responsiveness = 200
    AP.Attachment0 = A0
    AP.Attachment1 = A1
    
    AO.MaxTorque = 9e9
    AO.Responsiveness = 200
    AO.RigidityEnabled = true
    AO.Attachment0 = A0
    AO.Attachment1 = A1
    
    return A0, A1, AP, A0
end

_G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
    if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
        repeat task.wait() until Ins.Part0 ~= nil
        repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
        
        local AT0, AT1, AP, A0
        
        if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
            Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
            
            Character.Animate.Disabled = true
            
            for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                Anim:Stop()
            end
            
            Character.Animate.Disabled = false
            
            Character.Humanoid:LoadAnimation(IM.RightAim):Play()
            Character.Humanoid:LoadAnimation(IM.LeftAim):Play()
            
            AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 2), Vector3.new(20, 180, 0))
            
            spawn(function()
                while Ins.Parent ~= nil do
                    task.wait()
                    local Sine = tick() * 60
                    
                    AT1.Position = Vector3.new(0, 0.5, -1.7 + 0.4 * math.sin(Sine / 9))
                end
            end)
        end
        
        repeat task.wait() until Ins.Parent == nil
        
        
        
        Character.Animate.Disabled = true
            
    for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
        Anim:Stop()
    end
    
    Character.Animate.Disabled = false
        
        AT0:Destroy()
        AT1:Destroy()
        AP:Destroy()
        A0:Destroy()
    end
end)
end)

Section:NewButton("fe break body", "breaks the guy you grab body", function()
--fe break body
if game.PlaceId ~= 2788229376 then return end

        if getgenv().GrabWatcher then
            getgenv().GrabWatcher:Disconnect()
            getgenv().GrabWatcher = nil
            wait()
        end
        
        local LocalPlayer = game.Players.LocalPlayer
        local Character = LocalPlayer.Character
        
        local BodyEffects = Character.BodyEffects
        
        local Mouse = LocalPlayer:GetMouse()
        
        local workPlayers = workspace.Players
        
        local LiveConnections = {}
        
        local function Align(P0, P1, Offset)
            return game:GetService("RunService").Heartbeat:Connect(function()
                P0.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                P0.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                P0.CFrame = P1.CFrame * (Offset or CFrame.new())
            end)
        end
        
        local function InsertOn(Table, Value)
            if type(Table) == "table" and Value then
                Table[#Table + 1] = Value
            end
        end
        
        local function Loop(Name, Callback)
            if game:GetService("RunService")[Name] then
                local CurrentLoop
                CurrentLoop = game:GetService("RunService")[Name]:Connect(function()
                    local Result, Output = pcall(Callback)
                    
                    if not Result then
                        CurrentLoop:Disconnect()
                        warn(Output)
                    end
                end)
                
                return CurrentLoop
            end
        end
        
        local function CloneCharacter(Player)
            Player.Archivable = true
            
            local newClone = Player:Clone()
            newClone.Humanoid.RootPart.Anchored = false
            newClone["GRABBING_CONSTRAINT"]:Destroy()
            newClone.RagdollConstraints:Destroy()
            newClone.Humanoid.RootPart.CFrame = newClone.Humanoid.RootPart.CFrame * CFrame.new(0, 2, 0)
            
            newClone.Animate.Disabled = true
            task.wait()
            newClone.Animate.Disabled = false
            
            newClone.Humanoid:ChangeState("GettingUp")
            
            newClone.Parent = Character
            
            for _, Class in pairs(newClone:GetDescendants()) do
                if Class:IsA("BasePart") then
                    Class.Massless = false
                    Class.Transparency = 1
                end
                
                if Class:IsA("Decal") then
                    Class.Transparency = 1
                end
            end
            
            Player.Archivable = false
            
            return newClone
        end
        
        local function onGrab()
            if BodyEffects.Grabbed.Value then
                wait()
                local GrabbedCharacter = BodyEffects.Grabbed.Value
                local GrabConstraint = GrabbedCharacter:WaitForChild("GRABBING_CONSTRAINT")
                
                if not GrabConstraint then return end
                
                local RopeGrab = GrabConstraint:FindFirstChildOfClass("RopeConstraint")
                
                RopeGrab.Length = 1/0
                
                local Origin
                
                Character.Humanoid.RootPart.CFrame = Character.Humanoid.RootPart.CFrame * CFrame.new(0, -25, 0)
                
                local PlayerClone = CloneCharacter(GrabbedCharacter)
                
                workspace.CurrentCamera.CameraSubject = PlayerClone
                
                local RayParams = RaycastParams.new()
                RayParams.FilterDescendantsInstances = {Character, GrabbedCharacter}
                RayParams.IgnoreWater = true
                
                InsertOn(LiveConnections, Loop("Heartbeat", function()
                    local RootPartPosition = PlayerClone.Humanoid.RootPart.CFrame.Position
                    local RaycastResult = workspace:Raycast(RootPartPosition, RootPartPosition - Vector3.new(0, 9e9, 0), RayParams)
                    
                    local Position = Vector3.new()
                    
                    if RaycastResult and RaycastResult.Instance ~= nil then
                        Position = RaycastResult.Position - Vector3.new(0, PlayerClone.Humanoid.RootPart.Size.Y * 5, 0)
                    end
                    
                    Character.Humanoid.RootPart.CFrame = CFrame.new(Vector3.new(Position.X, -Position.Y, Position.Z)) * CFrame.Angles(math.rad(90), 0, 0)
                end))
                
                InsertOn(LiveConnections, Loop("Stepped", function()
                    PlayerClone.Humanoid.Jump = Character.Humanoid.Jump
                    PlayerClone.Humanoid:Move(Character.Humanoid.MoveDirection, false)
                    
                    for _, Class in pairs(GrabbedCharacter:GetDescendants()) do
                        if Class:IsA("BasePart") then
                            Class.CanCollide = false
                        end
                    end
                end))
                
                for _, Class in pairs(PlayerClone:GetChildren()) do
                    if Class:IsA("BasePart") and GrabbedCharacter:FindFirstChild(Class.Name) and Class.Name ~= RopeGrab.Attachment1.Parent then
                        InsertOn(LiveConnections, 
                            Align(
                                GrabbedCharacter:FindFirstChild(Class.Name), 
                                Class, 
                                CFrame.new(0, 0, 0)
                            )
                        )
                    end
                end
                
                local function Stop()
                    for _ = 1, 10 do
                        game:GetService("RunService").RenderStepped:Wait()
                        Character.Humanoid.RootPart.CFrame = CFrame.new(PlayerClone.PrimaryPart.CFrame.Position) * CFrame.new(0, 5, 0)
                        Character.Humanoid.RootPart.Velocity = Vector3.zero
                    end
                    
                    PlayerClone:Destroy()
                    
                    workspace.CurrentCamera.CameraSubject = Character
                    
                    for _, Connection in pairs(LiveConnections) do
                        Connection:Disconnect()
                    end
                end
                
                local Ungrabbed
                
                Ungrabbed = BodyEffects.Grabbed.Changed:Connect(function()
                    if BodyEffects.Grabbed.Value == nil then
                        Stop()
                        Ungrabbed:Disconnect()
                    end
                end)
            end
        end
        
        getgenv().GrabWatcher = BodyEffects.Grabbed:GetPropertyChangedSignal("Value"):Connect(onGrab)
end)

Section:NewButton("foot Grab v1", "foot grab", function()
            local LocalPlayer = game.Players.LocalPlayer
            local Character = LocalPlayer.Character
            
            local IM = game:GetService("ReplicatedStorage").IM.ANIM
            
            local PlayersChar = workspace.Players
            
            if _G.JOINTWATCHER then
                _G.JOINTWATCHER:Disconnect()
            end
            
            local function Align(P0, P1, P, R)
                local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
                
                local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
                
                A1.Position = P
                A0.Rotation = R
                
                AP.RigidityEnabled = true
                AP.Responsiveness = 200
                AP.Attachment0 = A0
                AP.Attachment1 = A1
                
                AO.MaxTorque = 9e9
                AO.Responsiveness = 200
                AO.RigidityEnabled = true
                AO.Attachment0 = A0
                AO.Attachment1 = A1
                
                return A0, A1, AP, A0
            end
            
            _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
                if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
                    repeat task.wait() until Ins.Part0 ~= nil
                    repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
                    
                    local AT0, AT1, AP, A0
                    
                    if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                        Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                        
                        Character.Animate.Disabled = true
                        
                        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                            Anim:Stop()
                        end
                        
                        Character.Animate.Disabled = false
                        
                        Character.Humanoid:LoadAnimation(IM.RightAim):Play()
                        
                        AT0, AT1, AP, A0 = Align(Ins.Parent.RightLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 0), Vector3.new(270, 0, 0))
                        
                        
                        spawn(function()
                            while Ins.Parent ~= nil do
                                task.wait()
                                local Sine = tick() * 60
                                
                                AT1.Position = Vector3.new(0, -0.5, 0 + 0 * math.sin(Sine / 8))
                            end
                        end)
                    end
                    
                    repeat task.wait() until Ins.Parent == nil
                    
                    Character.Animate.Disabled = true
                        
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                    
                    AT0:Destroy()
                    AT1:Destroy()
                    AP:Destroy()
                    A0:Destroy()
                end
            end)
            end)

Section:NewButton("backpack grab", "backpack the grabbed person", function()
local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 0), Vector3.new(20, 545, 0))
                
                
                
                spawn(function()
                    while Ins.Parent ~= nil do
                        task.wait()
                        local Sine = tick() * 60
                        
                        AT1.Position = Vector3.new(0, 1, 1.3 + 0 * math.sin(Sine / 8))
                    end
                end)
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("backpack v2", "backback the grabbed player", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 0), Vector3.new(180, 0, 0))
                
                
                spawn(function()
                    while Ins.Parent ~= nil do
                        task.wait()
                        local Sine = tick() * 60
                        
                        AT1.Position = Vector3.new(0, 1, 1.5 + 0 * math.sin(Sine / 8))
                    end
                end)
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("spin grab", "spin grab", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 10), Vector3.new(90, 0, 0))
                AT0, AT1, AP, A0 = Align(Ins.Parent.RightLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(5, 5, 0), Vector3.new(0, 0, 0))
                AT0, AT1, AP, A0 = Align(Ins.Parent.LeftLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 5, 0), Vector3.new(0, 0, 0))
                
                spawn(function()
                    while Ins.Parent ~= nil do
                        task.wait()
                        local Sine = tick() * 60
                        
                        AT1.Position = Vector3.new(0, 5, 0 + 0 * math.sin(Sine / 5)) --0.5
                    end
                end)
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("merga grab", "merga grab", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 0), Vector3.new(90, 0, 0))
                AT0, AT1, AP, A0 = Align(Ins.Parent.RightLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(-2, 10, 0), Vector3.new(0, 0, 0))
                AT0, AT1, AP, A0 = Align(Ins.Parent.LeftLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(-2, 5, 0), Vector3.new(0, 0, 0))
                
                spawn(function()
                    while Ins.Parent ~= nil do
                        task.wait()
                        local Sine = tick() * 60
                        
                        AT1.Position = Vector3.new(0, 5, 0 + 0 * math.sin(Sine / 5)) --0.5
                    end
                end)
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("merga v2 grab", "merga v2 grab", function()
        local LocalPlayer = game.Players.LocalPlayer
        local Character = LocalPlayer.Character
        
        local IM = game:GetService("ReplicatedStorage").IM.ANIM
        
        local PlayersChar = workspace.Players
        
        if _G.JOINTWATCHER then
            _G.JOINTWATCHER:Disconnect()
        end
        
        local function Align(P0, P1, P, R)
            local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
            
            local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
            
            A1.Position = P
            A0.Rotation = R
            
            AP.RigidityEnabled = true
            AP.Responsiveness = 200
            AP.Attachment0 = A0
            AP.Attachment1 = A1
            
            AO.MaxTorque = 9e9
            AO.Responsiveness = 200
            AO.RigidityEnabled = true
            AO.Attachment0 = A0
            AO.Attachment1 = A1
            
            return A0, A1, AP, A0
        end
        
        _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
            if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
                repeat task.wait() until Ins.Part0 ~= nil
                repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
                
                local AT0, AT1, AP, A0
                
                if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                    Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                    
                    Character.Animate.Disabled = true
                    
                    for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                        Anim:Stop()
                    end
                    
                    Character.Animate.Disabled = false
                    
                    Character.Humanoid:LoadAnimation(IM.RightAim):Play()
                    
                    AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.UpperTorso, Vector3.new(0, 0, 0), Vector3.new(90, 545, 0))
                end
                
                repeat task.wait() until Ins.Parent == nil
                
                Character.Animate.Disabled = true
                    
            for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                Anim:Stop()
            end
            
            Character.Animate.Disabled = false
                
                AT0:Destroy()
                AT1:Destroy()
                AP:Destroy()
                A0:Destroy()
            end
        end)
end)

Section:NewButton("gojo grab", "????", function()
    local LocalPlayer = game.Players.LocalPlayer
local Character = LocalPlayer.Character

local IM = game:GetService("ReplicatedStorage").IM.ANIM

local PlayersChar = workspace.Players

if _G.JOINTWATCHER then
    _G.JOINTWATCHER:Disconnect()
end

local function Align(P0, P1, P, R)
    local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
    
    local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
    
    A1.Position = P
    A0.Rotation = R
    
    AP.RigidityEnabled = true
    AP.Responsiveness = 200
    AP.Attachment0 = A0
    AP.Attachment1 = A1
    
    AO.MaxTorque = 9e9
    AO.Responsiveness = 200
    AO.RigidityEnabled = true
    AO.Attachment0 = A0
    AO.Attachment1 = A1
    
    return A0, A1, AP, A0
end

_G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
    if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
        repeat task.wait() until Ins.Part0 ~= nil
        repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
        
        local AT0, AT1, AP, A0
        
        if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
            Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
            
            Character.Animate.Disabled = true
            
            for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                Anim:Stop()
            end
            
            Character.Animate.Disabled = false
            
            Character.Humanoid:LoadAnimation(IM.RightAim):Play()
            
            AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 0), Vector3.new(90, 0, 0))
            AT0, AT1, AP, A0 = Align(Ins.Parent.RightUpperLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 5), Vector3.new(0, 0, 0))
            AT0, AT1, AP, A0 = Align(Ins.Parent.LeftUpperLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 5), Vector3.new(0, 0, 0))
            AT0, AT1, AP, A0 = Align(Ins.Parent.RightLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 5), Vector3.new(0, 0, 0))
            AT0, AT1, AP, A0 = Align(Ins.Parent.LeftLowerLeg, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 5), Vector3.new(0, 0, 0))
        end
        
        repeat task.wait() until Ins.Parent == nil
        
        Character.Animate.Disabled = true
            
    for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
        Anim:Stop()
    end
    
    Character.Animate.Disabled = false
        
        AT0:Destroy()
        AT1:Destroy()
        AP:Destroy()
        A0:Destroy()
    end
end)
end)

Section:NewButton("im gonna rip you in half now!", "rip body", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

function notify(title, text, icon, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = icon,
        Duration = duration
    })
end

function chat(msg)
    local A_1 = msg
    local A_2 = "All"
    local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
    Event:FireServer(A_1, A_2)
end

local function kick()
    local KIckAnim = Instance.new('Animation')
    KIckAnim.AnimationId = "rbxassetid://13850675130"
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "Rip In Half"
    
    tool.Activated:Connect(function()
        local grabbedValue = game.Players.LocalPlayer.Character.BodyEffects.Grabbed.Value
        if not grabbedValue then
            notify("cannot active tool drag player first", "drag player first to work", "rbxthumb://type=Asset&id=9915433572&w=150&h=150", 4)
            return
        end
        
        wait(.1)
        chat("Iâ€™m gonna rip you in half now.")
        Play(7148332723)
        wait(2.3)
        Play(4752240968)
        local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
        if humanoid then
            wait(0.3) humanoid:LoadAnimation(KIckAnim):Play()
        end
        wait(0.1)
        
        local grabbedCharacter = game.Players:GetPlayerFromCharacter(grabbedValue).Character
        if grabbedCharacter then
            -- Adjust LowerTorso position
            local lowerTorso = grabbedCharacter:FindFirstChild("LowerTorso")
            if lowerTorso then
                lowerTorso.Position = Vector3.new(0, -1200, 0)
            end

            local RightUpperArm = grabbedCharacter:FindFirstChild("RightUpperArm")
            if RightUpperArm then
                RightUpperArm.Position = Vector3.new(0, -1200, 0)
            end

           local LeftUpperArm = grabbedCharacter:FindFirstChild("LeftUpperArm")
            if LeftUpperArm then
                LeftUpperArm.Position = Vector3.new(0, -1200, 0)
            end

           local RightUpperLeg = grabbedCharacter:FindFirstChild("RightUpperLeg")
            if RightUpperLeg then
                RightUpperLeg.Position = Vector3.new(0, -1200, 0)
            end

           local LeftUpperLeg = grabbedCharacter:FindFirstChild("LeftUpperLeg")
            if LeftUpperLeg then
                LeftUpperLeg.Position = Vector3.new(0, -1200, 0)
            end
        end
        
        wait(0.1)
        game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
    end)
    
    tool.Parent = game.Players.LocalPlayer.Backpack
end

    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
local DefaultDanceanim = Instance.new('Animation')
DefaultDanceanim.AnimationId = "rbxassetid://3135389157"

local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
local animation = humanoid:LoadAnimation(DefaultDanceanim)

animation:Play()
animation.TimePosition = 0
animation:AdjustSpeed(0.2)

            local DefaultDanceanim2 = Instance.new('Animation')
            DefaultDanceanim2.AnimationId = "rbxassetid://3135389157"
            
            local humanoid = Character:FindFirstChildWhichIsA('Humanoid')
            local animation2 = humanoid:LoadAnimation(DefaultDanceanim2)

            -- Make the animation slower
            animation2:Play()
            animation2.TimePosition = 0.1
            animation2:AdjustSpeed(0)               
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(1, -0, -0), Vector3.new(90, 70, 160))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)

game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR')
kick()
end)

Section:NewButton("hifgg break arms remake", "rip body", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

function notify(title, text, icon, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = icon,
        Duration = duration
    })
end

function chat(msg)
    local A_1 = msg
    local A_2 = "All"
    local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
    Event:FireServer(A_1, A_2)
end

           notify("break arms loaded!", "made by hifgg", "rbxthumb://type=Asset&id=9915433572&w=150&h=150", 5)

local function kick()
    local KIckAnim = Instance.new('Animation')
    KIckAnim.AnimationId = "rbxassetid://3096047107"
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "break arms"
    
    tool.Activated:Connect(function()
        local grabbedValue = game.Players.LocalPlayer.Character.BodyEffects.Grabbed.Value
        if not grabbedValue then
            notify("cannot active tool drag player first", "drag player first to work", "rbxthumb://type=Asset&id=9915433572&w=150&h=150", 4)
            return
        end
        
        wait(.1)
        chat("hifgg js took ur arms gng")
        Play(4752240968)
        local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
        if humanoid then
            wait(0.1) humanoid:LoadAnimation(KIckAnim):Play()
        end
        wait(0.1)
        
        local grabbedCharacter = game.Players:GetPlayerFromCharacter(grabbedValue).Character
        if grabbedCharacter then
            -- Adjust LowerTorso position
            local RightUpperArm = grabbedCharacter:FindFirstChild("RightUpperArm")
            if RightUpperArm then
                RightUpperArm.Position = Vector3.new(0, -1200, 0)
            end

           local LeftUpperArm = grabbedCharacter:FindFirstChild("LeftUpperArm")
            if LeftUpperArm then
                LeftUpperArm.Position = Vector3.new(0, -1200, 0)
            end
        end
        
        wait(0.1)
        game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
    end)
    
    tool.Parent = game.Players.LocalPlayer.Backpack
end

    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
local DefaultDanceanim = Instance.new('Animation')
DefaultDanceanim.AnimationId = "rbxassetid://3135389157"

local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
local animation = humanoid:LoadAnimation(DefaultDanceanim)

animation:Play()
animation.TimePosition = 0
animation:AdjustSpeed(0.2)

            local DefaultDanceanim2 = Instance.new('Animation')
            DefaultDanceanim2.AnimationId = "rbxassetid://3135389157"
            
            local humanoid = Character:FindFirstChildWhichIsA('Humanoid')
            local animation2 = humanoid:LoadAnimation(DefaultDanceanim2)

            -- Make the animation slower
            animation2:Play()
            animation2.TimePosition = 0.1
            animation2:AdjustSpeed(0)               
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(1, -0, -0), Vector3.new(90, 70, 160))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)

game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR')
kick()
end)

Section:NewButton("hifgg break limbs remake", "rip body", function()
--//------------------------------------------------------------------------------------------\\-- SOUND FIXED BY ticxyylolz#9164
TweenService = game:GetService("TweenService")
OWNER = game:GetService("Players").LocalPlayer
--//------------------------------------------------------------------------------------------\\--
local OriginalKeyUpValue = 0
function StopAudio()
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("BoomboxStop")
end
--//------------------------------------------------------------------------------------------\\--
function stop(ID, Key)
    local cor = coroutine.wrap(function()
        wait(OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
        if OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
            StopAudio()
        end
    end)
    cor()
end
--//------------------------------------------------------------------------------------------\\--
function Play(ID)
    if OWNER.Backpack:FindFirstChild("[Boombox]") then
        local Tool = nil
        OWNER.Backpack["[Boombox]"].Parent = OWNER.Character
        game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
        OWNER.Character["[Boombox]"].RequiresHandle = false
        OWNER.Character["[Boombox]"].Parent = OWNER.Backpack
        OWNER.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
        if Tool ~= true then
            if Tool then
                Tool.Parent = OWNER.Character
            end
        end
        OWNER.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
            local cor = coroutine.wrap(function()
                repeat wait() until OWNER.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OWNER.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
                OriginalKeyUpValue = OriginalKeyUpValue+1
                stop(ID, OriginalKeyUpValue)
            end)
        cor()
    end
end

function notify(title, text, icon, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Icon = icon,
        Duration = duration
    })
end

function chat(msg)
    local A_1 = msg
    local A_2 = "All"
    local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
    Event:FireServer(A_1, A_2)
end

            notify("break limbs loaded!", "made by hifgg", "rbxthumb://type=Asset&id=9915433572&w=150&h=150", 5)

local function kick()
    local KIckAnim = Instance.new('Animation')
    KIckAnim.AnimationId = "rbxassetid://3096047107"
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "break limbs"
    
    tool.Activated:Connect(function()
        local grabbedValue = game.Players.LocalPlayer.Character.BodyEffects.Grabbed.Value
        if not grabbedValue then
            notify("cannot active tool drag player first", "drag player first to work", "rbxthumb://type=Asset&id=9915433572&w=150&h=150", 4)
            return
        end
        
        wait(.1)
        chat("hifgg js took ur limbs gng")
        Play(4752240968)
        local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
        if humanoid then
            wait(0.1) humanoid:LoadAnimation(KIckAnim):Play()
        end
        wait(0.1)
        
        local grabbedCharacter = game.Players:GetPlayerFromCharacter(grabbedValue).Character
        if grabbedCharacter then
            -- Adjust LowerTorso position
            local RightUpperArm = grabbedCharacter:FindFirstChild("RightUpperArm")
            if RightUpperArm then
                RightUpperArm.Position = Vector3.new(0, -1200, 0)
            end

           local LeftUpperArm = grabbedCharacter:FindFirstChild("LeftUpperArm")
            if LeftUpperArm then
                LeftUpperArm.Position = Vector3.new(0, -1200, 0)
            end

           local RightUpperLeg = grabbedCharacter:FindFirstChild("RightUpperLeg")
            if RightUpperLeg then
                RightUpperLeg.Position = Vector3.new(0, -1200, 0)
            end

           local LeftUpperLeg = grabbedCharacter:FindFirstChild("LeftUpperLeg")
            if LeftUpperLeg then
                LeftUpperLeg.Position = Vector3.new(0, -1200, 0)
            end
        end
        
        wait(0.1)
        game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
    end)
    
    tool.Parent = game.Players.LocalPlayer.Backpack
end

    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
local DefaultDanceanim = Instance.new('Animation')
DefaultDanceanim.AnimationId = "rbxassetid://3135389157"

local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
local animation = humanoid:LoadAnimation(DefaultDanceanim)

animation:Play()
animation.TimePosition = 0
animation:AdjustSpeed(0.2)

            local DefaultDanceanim2 = Instance.new('Animation')
            DefaultDanceanim2.AnimationId = "rbxassetid://3135389157"
            
            local humanoid = Character:FindFirstChildWhichIsA('Humanoid')
            local animation2 = humanoid:LoadAnimation(DefaultDanceanim2)

            -- Make the animation slower
            animation2:Play()
            animation2.TimePosition = 0.1
            animation2:AdjustSpeed(0)               
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(1, -0, -0), Vector3.new(90, 70, 160))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)

game:GetService('Players').LocalPlayer.Character:WaitForChild('FULLY_LOADED_CHAR')
kick()
end)

Section:NewButton("neck grab v4 remake????", "neck grab", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
local DefaultDanceanim = Instance.new('Animation')
DefaultDanceanim.AnimationId = "rbxassetid://3135389157"

local humanoid = game:GetService('Players').LocalPlayer.Character:FindFirstChildWhichIsA('Humanoid')
local animation = humanoid:LoadAnimation(DefaultDanceanim)

animation:Play()
animation.TimePosition = 0
animation:AdjustSpeed(0.2)

            local DefaultDanceanim2 = Instance.new('Animation')
            DefaultDanceanim2.AnimationId = "rbxassetid://3135389157"
            
            local humanoid = Character:FindFirstChildWhichIsA('Humanoid')
            local animation2 = humanoid:LoadAnimation(DefaultDanceanim2)

            -- Make the animation slower
            animation2:Play()
            animation2.TimePosition = 0.1
            animation2:AdjustSpeed(0)               
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(1, -0, -0), Vector3.new(90, 70, 160))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
end)

Section:NewButton("neck grab v3", "neck grab", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false                
               
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 0), Vector3.new(90, 0, 0))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
    end)

Section:NewButton("neck grab v2", "neck grab", function()
    local LocalPlayer = game.Players.LocalPlayer
    local Character = LocalPlayer.Character
    
    local IM = game:GetService("ReplicatedStorage").IM.ANIM
    
    local PlayersChar = workspace.Players
    
    if _G.JOINTWATCHER then
        _G.JOINTWATCHER:Disconnect()
    end
    
    local function Align(P0, P1, P, R)
        local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
        
        local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
        
        A1.Position = P
        A0.Rotation = R
        
        AP.RigidityEnabled = true
        AP.Responsiveness = 200
        AP.Attachment0 = A0
        AP.Attachment1 = A1
        
        AO.MaxTorque = 9e9
        AO.Responsiveness = 200
        AO.RigidityEnabled = true
        AO.Attachment0 = A0
        AO.Attachment1 = A1
        
        return A0, A1, AP, A0
    end
    
    _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
        if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
            repeat task.wait() until Ins.Part0 ~= nil
            repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
            
            local AT0, AT1, AP, A0
            
            if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                
                Character.Animate.Disabled = true
                
                for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                    Anim:Stop()
                end
                
                Character.Animate.Disabled = false
                
                Character.Humanoid:LoadAnimation(IM.RightAim):Play()
                
                AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 0), Vector3.new(90, 0, 0))
            end
            
            repeat task.wait() until Ins.Parent == nil
            
            Character.Animate.Disabled = true
                
        for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
            Anim:Stop()
        end
        
        Character.Animate.Disabled = false
            
            AT0:Destroy()
            AT1:Destroy()
            AP:Destroy()
            A0:Destroy()
        end
    end)
    end)

Section:NewButton("neck grab v1", "neck grab", function()
        local LocalPlayer = game.Players.LocalPlayer
        local Character = LocalPlayer.Character
        
        local IM = game:GetService("ReplicatedStorage").IM.ANIM
        
        local PlayersChar = workspace.Players
        
        if _G.JOINTWATCHER then
            _G.JOINTWATCHER:Disconnect()
        end
        
        local function Align(P0, P1, P, R)
            local A0, A1 = Instance.new("Attachment", P0), Instance.new("Attachment", P1)
            
            local AP, AO = Instance.new("AlignPosition", P0), Instance.new("AlignOrientation", P0)
            
            A1.Position = P
            A0.Rotation = R
            
            AP.RigidityEnabled = true
            AP.Responsiveness = 200
            AP.Attachment0 = A0
            AP.Attachment1 = A1
            
            AO.MaxTorque = 9e9
            AO.Responsiveness = 200
            AO.RigidityEnabled = true
            AO.Attachment0 = A0
            AO.Attachment1 = A1
            
            return A0, A1, AP, A0
        end
        
        _G.JOINTWATCHER = PlayersChar.DescendantAdded:Connect(function(Ins)
            if Ins:IsA("Weld") and Ins.Name == "GRABBING_CONSTRAINT" then
                repeat task.wait() until Ins.Part0 ~= nil
                repeat task.wait() until Ins:FindFirstChildOfClass("RopeConstraint")
                
                local AT0, AT1, AP, A0
                
                if Ins.Part0:IsDescendantOf(LocalPlayer.Character) then
                    Ins:FindFirstChildOfClass("RopeConstraint").Length = 9e9
                    
                    Character.Animate.Disabled = true
                    
                    for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                        Anim:Stop()
                    end
                    
                    Character.Animate.Disabled = false
                    
                    Character.Humanoid:LoadAnimation(IM.RightAim):Play()
                    
                    AT0, AT1, AP, A0 = Align(Ins.Parent.UpperTorso, LocalPlayer.Character.RightHand, Vector3.new(0, 0, 0), Vector3.new(90, 0, 160))
                end
                
                repeat task.wait() until Ins.Parent == nil
                
                Character.Animate.Disabled = true
                    
            for _, Anim in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
                Anim:Stop()
            end
            
            Character.Animate.Disabled = false
                
                AT0:Destroy()
                AT1:Destroy()
                AP:Destroy()
                A0:Destroy()
            end
        end)
        end)

local Tab = Window:NewTab("target")
local Section = Tab:NewSection("target")

Section:NewTextBox("Player Name", "Enter part of the player's Username or Display Name to choose the target", function(name)
    local player = nil
    for _, p in ipairs(game.Players:GetPlayers()) do
        if string.find(string.lower(p.Name), string.lower(name), 1, true) or
           string.find(string.lower(p.DisplayName), string.lower(name), 1, true) then
            player = p
            break
        end
    end
    if player then
        _G.targetPlayer = player
    end
end)

Section:NewButton("Goto", "Teleport to the matching player", function()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    if _G.targetPlayer then
        if _G.targetPlayer.Character then
            player.Character.HumanoidRootPart.CFrame = _G.targetPlayer.Character.HumanoidRootPart.CFrame
        else
            print("Target player does not have a character.")
        end
    else
        print("No player found with the specified username or display name.")
    end
end)

Section:NewToggle("View Player", false, function(state)
    viewToggled = state
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if viewToggled then
        local targetPlayer = _G.targetPlayer
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.HumanoidRootPart
        else
            game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
            viewToggled = false -- Stop viewing if the target player is no longer available
        end
    else
        game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    if viewToggled and player == _G.targetPlayer then
        viewToggled = false -- Stop viewing if the target player leaves
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    if viewToggled and player == _G.targetPlayer then
        viewToggled = false -- Stop viewing if the target player leaves
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if viewToggled then
        game.Workspace.CurrentCamera.CameraSubject = character:WaitForChild("Humanoid")
    end
end)

function Fling()
    for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if child:IsA'BasePart' then 
            child.CustomPhysicalProperties = PhysicalProperties.new(1, 1, 1, 1, 1) 
        end 
    end
    local BG = Instance.new('BodyGyro', game.Players.LocalPlayer.Character.Head)
    local BV = Instance.new('BodyVelocity', game.Players.LocalPlayer.Character.Head)
    BG.P = 9e4
    BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    BG.CFrame = game.Players.LocalPlayer.Character.Head.CFrame
    BV.Velocity = Vector3.new(0, 0, 0)
    BV.maxForce = Vector3.new(9e9, 9e9, 9e9)

    local BT = Instance.new("BodyThrust")
    BT.Parent = game.Players.LocalPlayer.Character.Head
    BT.Force = Vector3.new(9e5, 9e5, 9e5)
    BT.Location = game.Players.LocalPlayer.Character.Head.Position
end

function StopFling()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
			v:Destroy()
		end
    end
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Velocity = Vector3.new(0,0,0)
            v.RotVelocity = Vector3.new(0,0,0)
        end
    end
end

local FlingToggle = Section:NewToggle("Fling", false, function(bool)
    if bool then
        -- Enable Fling
        if anticheatbypasstp == false then
            anticheatbypasstp = true
            -- Anti Cheat
            local mt = getrawmetatable(game)
            setreadonly(mt,false)
            local old = mt.__namecall
            local TheBypass = {"TeleportDetect","OneMoreTime","CHECKER_1"}
            mt.__namecall = newcclosure(function(self,...)
                local meth = getnamecallmethod()
                local args = {...}
                if meth == "FireServer" then
                    if table.find(TheBypass, args[1]) then
                        return wait(math.huge)
                    end
                end
                return old(self,...)
            end)
        end

        local __namecall
        __namecall = hookmetamethod(game, "__namecall", function(...)
            if (not checkcaller() and getfenv(2).crash) then
                hookfunction(getfenv(2).crash, function()
                    print("Da Hood Tried To Crash LMAO")
                end)
            end
            return __namecall(...)
        end)

        saveposfling = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
        wait(.1)
        Fling()
        local dis = 3
        local IncreaseThing = 6
        Noclip = game:GetService("RunService").Stepped:Connect(function()
            for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA('BasePart') then
                    v.CanCollide = false
                end
            end
        end)
        Flinging = game:GetService("RunService").Heartbeat:Connect(function()
            task.wait(.01)
            if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if _G.targetPlayer.Character.Humanoid.MoveDirection.X < 0 then
                    XCFrameChange = -IncreaseThing
                elseif _G.targetPlayer.Character.Humanoid.MoveDirection.X > 0  then
                    XCFrameChange = IncreaseThing
                else
                    XCFrameChange = 0
                end
                if _G.targetPlayer.Character.Humanoid.MoveDirection.Z < 0 then
                    ZCFrameChange = -IncreaseThing
                elseif _G.targetPlayer.Character.Humanoid.MoveDirection.Z > 0 then
                    ZCFrameChange = IncreaseThing
                else
                    ZCFrameChange = 0
                end          
                if game.Players.LocalPlayer.Character then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(_G.targetPlayer.Character.UpperTorso.Position.X + math.random(-dis,dis) + XCFrameChange, _G.targetPlayer.Character.UpperTorso.Position.Y, _G.targetPlayer.Character.UpperTorso.Position.Z + math.random(-dis,dis) + ZCFrameChange) * CFrame.Angles(math.rad(game.Players.LocalPlayer.Character.HumanoidRootPart.Orientation.X + 350),math.rad(game.Players.LocalPlayer.Character.HumanoidRootPart.Orientation.Y + 200),math.rad(game.Players.LocalPlayer.Character.HumanoidRootPart.Orientation.Z + 240))
                end           
            end
        end)
    else
        -- Disable Fling
        if Flinging then
            Flinging:Disconnect()
            Flinging = nil
        end
        if Noclip then
            Noclip:Disconnect()
            Noclip = nil
        end
        StopFling()
        
        for i = 1,100 do
            task.wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(saveposfling)
        end
    end
end)

local bringsavepos = nil
local bringplr = false
local noclip = false

Section:NewToggle("Bring", false, function(enabled)
    if enabled then
        local targetPlayer = _G.targetPlayer
        if not targetPlayer then
            print("No target selected.")
            return
        end
        
        bringsavepos = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
        game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        bringplr = true
        noclip = true

        repeat
            task.wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
            if not game.Players.LocalPlayer.Character:FindFirstChild("Combat") then
                game.Players.LocalPlayer.Backpack:FindFirstChild("Combat").Parent = game.Players.LocalPlayer.Character
            else
                game.Players.LocalPlayer.Character:FindFirstChild("Combat"):Activate()
            end
        until targetPlayer.Character.BodyEffects:FindFirstChild("K.O").Value == true or bringplr == false
        
        repeat
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPlayer.Character.UpperTorso.Position) * CFrame.new(0, 3, 0)
            if not targetPlayer.Character:FindFirstChild("K.O") then
                game:GetService("ReplicatedStorage").MainEvent:FireServer("Grabbing", false)
            end
            wait(0.2)
        until targetPlayer.Character:FindFirstChild("GRABBING_CONSTRAINT") or bringplr == false
        
        wait(0.5)  -- Shortened wait time here
        game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        bringplr = false
        noclip = false
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(bringsavepos)
        game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
    else
        -- Optional: Functionality to stop bringing the player
        -- For example, you could add code here to stop the bringing process
        bringplr = false
    end
end)

local targetCharacter = nil
local originalPosition = nil
local isViewingPlayer = false -- Flag to track if currently viewing the player
local combatTool = nil
local loopkill = false

Section:NewToggle("Auto kill", false, function(bool)
    loopkill = bool
    if bool then
        if _G.targetPlayer then
            targetCharacter = game:GetService("Players")[_G.targetPlayer.Name].Character
            originalPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            game.Workspace.CurrentCamera.CameraSubject = nil
            _G.targetPlayer.CameraMode = Enum.CameraMode.LockFirstPerson
            if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then
                combatTool = game.Players.LocalPlayer.Backpack.Combat
                combatTool.Parent = game.Players.LocalPlayer.Character
            end
            isViewingPlayer = true -- Start viewing the player
        end
    else
        if combatTool then
            combatTool.Parent = game.Players.LocalPlayer.Backpack
            combatTool = nil
        end
        if targetCharacter then
            _G.targetPlayer.CameraMode = Enum.CameraMode.Classic
            targetCharacter = nil
            isViewingPlayer = false -- Stop viewing the player
        end
        if originalPosition then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
            originalPosition = nil
        end
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    if loopkill and player.Name == _G.targetPlayer.Name then
        if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then
            combatTool = game.Players.LocalPlayer.Backpack.Combat
            combatTool.Parent = game.Players.LocalPlayer.Character
        end
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    if loopkill and player.Name == _G.targetPlayer.Name then
        if combatTool then
            combatTool.Parent = game.Players.LocalPlayer.Backpack
            combatTool = nil
        end
        if targetCharacter then
            _G.targetPlayer.CameraMode = Enum.CameraMode.Classic
            targetCharacter = nil
            isViewingPlayer = false -- Stop viewing the player
        end
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if loopkill and _G.targetPlayer and game.Players.LocalPlayer == _G.targetPlayer then
        if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then
            combatTool = game.Players.LocalPlayer.Backpack.Combat
            combatTool.Parent = game.Players.LocalPlayer.Character
        end
    end
end)

game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
    if loopkill and combatTool then
        combatTool.Parent = game.Players.LocalPlayer.Character
    end
end)

game:service("RunService").RenderStepped:Connect(function()
    if loopkill and game.Players[_G.targetPlayer.Name].Character.BodyEffects["K.O"].Value == false then
        if game.Players.LocalPlayer.Character:FindFirstChild('Combat') then
            game.Players.LocalPlayer.Character:FindFirstChild('Combat'):Activate()
        end
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players")[_G.targetPlayer.Name].Character.UpperTorso.Position) * CFrame.new(0,-5,0)
        game.Workspace.Camera.CameraSubject = isViewingPlayer and game:GetService("Players")[_G.targetPlayer.Name].Character.Humanoid or nil -- Only set CameraSubject if viewing player
    else
        if loopkill and game.Players[_G.targetPlayer.Name].Character.BodyEffects["K.O"].Value == true then
            if game.Players[_G.targetPlayer.Name].Character.BodyEffects.Dead.Value == false then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players")[_G.targetPlayer.Name].Character.UpperTorso.Position) * CFrame.new(0,3,0)
                game.Workspace.Camera.CameraSubject = isViewingPlayer and game:GetService("Players")[_G.targetPlayer.Name].Character.Humanoid or nil -- Only set CameraSubject if viewing player
                game.ReplicatedStorage.MainEvent:FireServer("Stomp")
            else
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,0,0)
            end
        end
    end
end)
--END

local calltarget = false

local function spamCall()
    local player = _G.targetPlayer
    if player then
        calltarget = true
        while calltarget do
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):UnequipTools()
            wait()
            if game.Players.LocalPlayer.Backpack:FindFirstChild("[Phone]") then
                game.Players.LocalPlayer.Backpack:FindFirstChild("[Phone]").Parent = game.Players.LocalPlayer.Character
            end
            wait()
            game:GetService("ReplicatedStorage").MainEvent:FireServer("PhoneCall", player.Name)
            wait(0.5)
        end
    else
        print("Player not found.")
    end
end

local spamCallToggle = Section:NewToggle("Spam Call", false, function(Value)
    calltarget = Value
    if Value then
        spamCall()
    end
end)

Section:NewLabel("stand")

local ownerUsername = "" -- Initialize owner username variable

local ownerTextBox = Section:NewTextBox("Owner Name", "Enter part of the player's Username or Display Name to teleport to", function(name)
    ownerUsername = name
end)

local settings = {
    ['Position'] = 'Back', 
    ['CrewID'] = 32570691, 
    ['Attack'] = 'Heavy', 
    ['StandMode'] = 'Star Platinum', 
    ['FlyMode'] = 'Heaven', 
    ['Prediction'] = 0.3, 
    ['GunPrediction'] = 0.3, 
    ['AttackMode'] = 'Under', 
    ['GunMode'] = 'Under', 
    ['Resolver'] = true, 
    ['LowGraphics'] = false, 
    ['AntiStomp'] = true, 
    ['CustomName'] = 'Master', 
    ['Hidescreen'] = false, 
    ['ChatCmds'] = true, 
    ['AutoMask'] = true, 
    ['FPSCAP'] = true, 
    ['Msg'] = 'Yare Yare Daze.', 
    ['Alt'] = false,
    ['Sounds'] = false, 
    ['SummonMusic'] = false, 
    ['CustomSong'] = 8713037614 
}

Section:NewButton("be target stand", "be someone stand", function()
    if ownerUsername == "" then -- Check if owner username is empty
        warn("Please enter a username or display name first.")
        return
    end

    local player = nil
    for _, p in ipairs(game.Players:GetPlayers()) do
        if string.find(string.lower(p.Name), string.lower(ownerUsername), 1, true) or
           string.find(string.lower(p.DisplayName), string.lower(ownerUsername), 1, true) then
            player = p
            break
        end
    end
    
    if player then
        getgenv().Credit = 'Lol' -- Don't change this.
        getgenv().Owner = player.Name -- Set owner username to player's actual username
        getgenv().Settings = settings -- Set settings

loadstring(game:HttpGet("https://pastebin.com/raw/NBU07nGN"))()
    else
        warn("Player not found.")
    end
end)

local Tab = Window:NewTab("Toggles")
local Section = Tab:NewSection("Toggles")

local godBlockEnabled = false -- Variable to track if god block is enabled
local godBlockLoop = nil -- Variable to hold the loop for toggling the god block effect
local hideBlockEnabled = false -- Variable to track if hide block animation is enabled

local function enableGodBlock()
    godBlockLoop = game:GetService("RunService").Heartbeat:Connect(function()
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("BodyEffects") then
            local bodyEffects = game.Players.LocalPlayer.Character.BodyEffects
            if bodyEffects:FindFirstChild('Block') then
                bodyEffects.Block:Destroy()
            end
            game.ReplicatedStorage.MainEvent:FireServer("Block", true)
            wait()
            game.ReplicatedStorage.MainEvent:FireServer("Block", false)
        end
    end)
end

local function disableGodBlock()
    if godBlockLoop then
        godBlockLoop:Disconnect()
        godBlockLoop = nil
    end
end

local function toggleHideBlock(enabled)
    hideBlockEnabled = enabled
    if enabled then
        game:GetService('RunService'):BindToRenderStep("HideBlock", 0 , function()
            wait()
            if godBlockEnabled then
                local Plr = game.Players.LocalPlayer
                for _,v in pairs(Plr.Character:FindFirstChildWhichIsA('Humanoid'):GetPlayingAnimationTracks()) do
                    if v.Name == 'Block' then
                        v:Stop()
                    end
                end
            end
        end)
    else
        game:GetService('RunService'):UnbindFromRenderStep("HideBlock")
    end
end

local toggleGodBlock = Section:NewToggle("God Block", false, function(enabled)
    godBlockEnabled = enabled
    if enabled then
        enableGodBlock()
    else
        disableGodBlock()
    end
end)

local toggleHideAnimation = Section:NewToggle("Hide Block Animation", false, function(enabled)
    toggleHideBlock(enabled)
end)

local isStompAnimationHidden = false -- Variable to track toggle state
local renderStepName = "HideStompAnimationRenderStep"
local renderStepId = nil

local function stopStompAnimation()
    local Plr = game.Players.LocalPlayer
    local humanoid = Plr.Character:FindFirstChildOfClass('Humanoid')
    if humanoid and humanoid:IsDescendantOf(game) then
        for _, v in pairs(humanoid:GetPlayingAnimationTracks()) do
            if v.Name == 'Stomp' then
                v:Stop()
            end
        end
    end
end

local function toggleStompAnimation()
    if isStompAnimationHidden then
        stopStompAnimation()
    end
end

local function bindRenderStep()
    if not renderStepId then
        renderStepId = game:GetService('RunService'):BindToRenderStep(renderStepName, 0, function()
            toggleStompAnimation()
        end)
    end
end

local function unbindRenderStep()
    if renderStepId then
        game:GetService('RunService'):UnbindFromRenderStep(renderStepId)
        renderStepId = nil
    end
end

local Toggle = Section:NewToggle("Hide stomp animation", false, function(isToggled)
    isStompAnimationHidden = isToggled
    if isStompAnimationHidden then
        bindRenderStep()
    else
        unbindRenderStep()
    end
end)


local antiGrabEnabled = false

Section:NewToggle("Anti Grab", false, function(enabled)
    antiGrabEnabled = enabled
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if antiGrabEnabled then
        local grabbingConstraint = game.Players.LocalPlayer.Character:FindFirstChild("GRABBING_CONSTRAINT")
        if grabbingConstraint then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(15)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(16)
            wait()
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(0)
        end
    end
end)

Section:NewToggle("Auto Reload", false, function(p)
    if p == true then
        game:GetService('RunService'):BindToRenderStep("Auto-Reload", 0 , function()
            if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
                if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo") then
                    if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo").Value <= 0 then
                        game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")) 
                        wait(1)
                    end
                end
            end
        end)
    elseif p == false then
        game:GetService('RunService'):UnbindFromRenderStep("Auto-Reload")
    end
end)

local autoBlockEnabled = false -- Variable to track the state of auto block

local toggle = Section:NewToggle("Auto Block", false, function(enabled)
    autoBlockEnabled = enabled
end)

game:GetService('RunService'):BindToRenderStep("Auto-Block", 0 , function()
    if autoBlockEnabled then
        local MainEvent = game:GetService('ReplicatedStorage').MainEvent
        local player = game.Players.LocalPlayer
        local Distancia = 15 -- Here put the distance to activate

        local forbidden = {'[Popcorn]','[HotDog]','[GrenadeLauncher]','[RPG]','[SMG]','[TacticalShotgun]','[AK47]','[AUG]','[Glock]', '[Shotgun]','[Flamethrower]','[Silencer]','[AR]','[Revolver]','[SilencerAR]','[LMG]','[P90]','[DrumGun]','[Double-Barrel SG]','[Hamburger]','[Chicken]','[Pizza]','[Cranberry]','[Donut]','[Taco]','[Starblox Latte]','[BrownBag]','[Weights]','[HeavyWeights]'}
        local Found = false

        for _,v in pairs(game.Workspace.Players:GetChildren()) do
            if (v.UpperTorso.Position - player.Character.HumanoidRootPart.Position).Magnitude <= Distancia then
                if v.BodyEffects.Attacking.Value == true and not table.find(forbidden, v:FindFirstChildWhichIsA('Tool').Name ) and v.Name ~= player.Name then
                    Found = true
                    MainEvent:FireServer('Block', player.Name)
                end
            end
        end
    end
end)

Section:NewToggle("Auto Stomp", "ToggleInfo", function(state)
    if state then
        
_G.Toggle = true

while _G.Toggle do
wait()
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
end
    else
        
_G.Toggle = false

while _G.Toggle do
wait()
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
end
    end
end)

Section:NewToggle("Cash aura", false, function(state)
if state then
                                    
    getgenv().CashAura = game:GetService("RunService").Heartbeat:Connect(function()
        for i,v in pairs(game:GetService('Workspace')['Ignored']['Drop']:GetChildren()) do
            if v:IsA('Part') then
                if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 12 then
                    fireclickdetector(v:FindFirstChild('ClickDetector'))
                end
            end
        end
        end)
                                    else
                                        getgenv().CashAura:Disconnect()
                                    end
                                    end)


local Tab = Window:NewTab("teleports")
local Section = Tab:NewSection("teleports")

Section:NewButton("Uphill Gunstore", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(481.3045959472656, 48.07050323486328, -620.1513671875)
end)
Section:NewButton("Downhill Gunstore", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-578.5796508789062, 8.314779281616211, -736.3884887695312)
end)
Section:NewButton("Hood Fitness", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-76.4957275390625, 22.700284957885742, -630.9816284179688)
end)
Section:NewButton("Bar", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-264.5504455566406, 48.52669143676758, -446.29254150390625)
end)
Section:NewButton("Bank", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-432.1439208984375, 38.9649658203125, -284.1016540527344)
end)
Section:NewButton("safe 2", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-117, -57, 147)
end)
Section:NewButton("safe 3", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-546, 173, 1)
end)
Section:NewButton("safe 5", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,150,0)
end)
Section:NewButton("safe for test", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(11, 12, 214)
end)
Section:NewButton("Da Furniture", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-489.1640319824219, 21.8498477935791, -76.60957336425781)
end)
Section:NewButton("School", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-531.3531494140625, 21.74999237060547, 252.47506713867188)
end)
Section:NewButton("Da Casino", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-863.4664306640625, 21.59995460510254, -152.92788696289062)
end)
Section:NewButton("Da Theatre", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1004.9942626953125, 25.10002326965332, -135.17315673828125)
end)
Section:NewButton("Basketball Court", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-896.5643310546875, 21.999818801879883, -528.7317504882812)
end)
Section:NewButton("Hair Salon", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-855.55810546875, 22.005008697509766, -665.0170288085938)
end)
Section:NewButton("FoodsMart", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-906.5833740234375, 22.005002975463867, -653.2225952148438)
end)
Section:NewButton("Mat Laundry", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-971.4241333007812, 22.005887985229492, -630.115478515625)
end)
Section:NewButton("Swift", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-799.7603149414062, 21.8799991607666, -662.3109741210938)
end)
Section:NewButton("Military Base", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-50.412960052490234, 25.25499725341797, -868.921142578125)
end)
Section:NewButton("Da Boxing Club", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-232.0669708251953, 22.067293167114258, -1119.9541015625)
end)
Section:NewButton("Flowers", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-71.62272644042969, 23.15056800842285, -327.79412841796875)
end)
Section:NewButton("Hospital", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(98.40196228027344, 22.799989700317383, -484.89385986328125)
end)
Section:NewButton("Hood Kicks", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-203.53347778320312, 21.845796585083008, -410.1529846191406)
end)
Section:NewButton("Police Station", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-265.4999694824219, 21.797977447509766, -96.51517486572266)
end)
Section:NewButton("Barba", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9.003872871398926, 21.74802017211914, -107.73101043701172)
end)
Section:NewButton("Church", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(205.8213653564453, 23.77802085876465, -58.47077560424805)
end)
Section:NewButton("Train", "ButtonInfo", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-426.41705322265625, -21.25197982788086, 44.953758239746094)
end)

local Tab = Window:NewTab("animations")
local Section = Tab:NewSection("animations")


Section:NewButton("no animation (no animation)", "no animation", function()
    local Char = game.Players.LocalPlayer.Character
local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

for i,v in next, Hum:GetPlayingAnimationTracks() do
    v:Stop()
end
wait(1)
local Animate = game.Players.LocalPlayer.Character.Animate
Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1"
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end)

local Tab = Window:NewTab("Misc")
local Section = Tab:NewSection("Misc")

Section:NewButton("anti slow", "you wonâ€™t be slow when you attack", function()
local mt = getrawmetatable(game)
local backup
backup = hookfunction(mt.__newindex, newcclosure(function(self, key, value)
if key == "WalkSpeed" and value < 18 then
value = 18
end
return backup(self, key, value)
end))
end)

Section:NewButton("anti auto kill", "anti auto kill", function()
game.Workspace.FallenPartsDestroyHeight = -10000
    local part = Instance.new("Part")
    part.Size = Vector3.new(100, 2, 100)
    part.Name = "AntiAutoKill"
    part.Parent = game.Workspace
    part.Anchored = true
    local pl = game.Players.LocalPlayer.Character
    part.Position = Vector3.new(-897.6600952148438, -650.0717163085938, -709.875732421875)
    pl.HumanoidRootPart.CFrame = part.CFrame
    end)

Section:NewButton("teleport to anti auto kill", "anti auto kill", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-897.6600952148438, -640.0717163085938, -709.875732421875)
end)

Section:NewButton("Rejoin", "ButtonInfo", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)

Section:NewButton("Server Snipe", "Join anyoneâ€™s server", function()
loadstring(game:HttpGet("https://freenote.biz/raw/jzTjXcX5dJ"))();
end)

Section:NewButton("become a police/leave", "police", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.workspace.Ignored["Join/Leave"].Head.CFrame
fireclickdetector(game.workspace.Ignored["Join/Leave"].ClickDetector)
end)

Section:NewButton("Redeem codes", "Redeems codes", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/cool5013/hub/main/codes"))();
end)

Section:NewButton("Rightclick good for silent aim", "op", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/BalligusapoTT/BalligusapoTT/main/Leftclickballi'))()
end)

Section:NewButton("No Cooldown Jump", "ButtonInfo", function()
--you smell raw beef--
if not game.IsLoaded(game) then
   game.Loaded.Wait(game.Loaded);
end


local IsA = game.IsA;
local newindex = nil


newindex = hookmetamethod(game, "__newindex", function(self, Index, Value)
   if not checkcaller() and IsA(self, "Humanoid") and Index == "JumpPower" then
       return
   end
   
   return newindex(self, Index, Value);
end)
end)

Section:NewButton("SavePosition", "Locations1", function() 
    _G.savedhumanoidpos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
end)
Section:NewButton("LoadPosition", "Locations1", function() game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(_G.savedhumanoidpos)
end)

