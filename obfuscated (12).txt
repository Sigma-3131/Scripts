local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\244\195","\178\218\237\200"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v119=0;local v120;while true do if (0==v119) then v120=v13(v102,v30);v30=nil;v119=1;end if (v119==1) then return v120;end end else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%(3 -2)) ;else local v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (7 -5) ;v48=1;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -(2 -1)) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v111=0;while true do if (0==v111) then v59=1;v57=0;break;end end end elseif (v59==(3951 -1904)) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-(1882 -(814 + 45)) ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=1, #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v79=2 -1 ,v68 do local v80=v32();local v81;if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v69[v79]=v81;end v67[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,2 -1 ,1)==0) then local v107=0;local v108;local v109;local v110;while true do if (3==v107) then if (v31(v109,3,2 + 1 )==1) then v110[13 -9 ]=v69[v110[4]];end v64[v83]=v110;break;end if (v107==0) then v108=v31(v84,1 + 1 ,3);v109=v31(v84,4,6);v107=1;end if (v107==1) then v110={v33(),v33(),nil,nil};if (v108==0) then local v123=0;while true do if (v123==0) then v110[3]=v33();v110[889 -(261 + 624) ]=v33();break;end end elseif (v108==1) then v110[3]=v34();elseif (v108==2) then v110[3]=v34() -(2^(635 -(555 + 64))) ;elseif (v108==(934 -(857 + 74))) then v110[3]=v34() -(2^16) ;v110[572 -(367 + 201) ]=v33();end v107=2;end if (2==v107) then if (v31(v109,1,1)==(928 -(214 + 713))) then v110[2]=v69[v110[2]];end if (v31(v109,2,1 + 1 )==(3 -2)) then v110[3]=v69[v110[1 + 2 ]];end v107=3;end end end end for v85=1,v34() do v65[v85-(1748 -(760 + 987)) ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v87=v74;local v88=v75;local v89=v76;local v90=v38;local v91=1;local v92= -(1914 -(1789 + 124));local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v105=0,v95 do if (v105>=v89) then v93[v105-v89 ]=v94[v105 + 1 ];else v97[v105]=v94[v105 + (878 -(282 + 595)) ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v106=0;while true do if (v106==1) then if (v100<=47) then if (v100<=23) then if (v100<=11) then if (v100<=5) then if (v100<=2) then if (v100<=0) then v97[v99[2]]=v97[v99[7 -4 ]] + v99[4] ;elseif (v100>1) then local v185=v99[2];v97[v185](v97[v185 + (3 -2) ]);else for v323=v99[2],v99[1 + 2 ] do v97[v323]=nil;end end elseif (v100<=3) then local v135=0;local v136;local v137;while true do if (v135==1) then for v368=v136 + 1 ,v99[4] do v137=v137   .. v97[v368] ;end v97[v99[2]]=v137;break;end if (0==v135) then v136=v99[3];v137=v97[v136];v135=1;end end elseif (v100>4) then local v186=0;local v187;local v188;local v189;local v190;while true do if (v186==1) then v92=(v189 + v187) -(1638 -(1523 + 114)) ;v190=0 + 0 ;v186=2;end if (0==v186) then v187=v99[2];v188,v189=v90(v97[v187](v21(v97,v187 + 1 ,v92)));v186=1;end if (v186==2) then for v420=v187,v92 do local v421=0;while true do if (v421==0) then v190=v190 + (1 -0) ;v97[v420]=v188[v190];break;end end end break;end end else v97[v99[2 + 0 ]][v99[1068 -(68 + 997) ]]=v99[4];end elseif (v100<=(1063 -(87 + 968))) then if (v100<=6) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==7) then local v194=v99[8 -6 ];do return v21(v97,v194,v92);end else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=9) then if (v97[v99[1272 -(226 + 1044) ]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==10) then local v197=v99[2];local v198,v199=v90(v97[v197](v21(v97,v197 + 1 ,v99[3])));v92=(v199 + v197) -1 ;local v200=0;for v328=v197,v92 do local v329=0;while true do if (0==v329) then v200=v200 + 1 ;v97[v328]=v198[v200];break;end end end else v97[v99[2 + 0 ]]();end elseif (v100<=17) then if (v100<=(60 -46)) then if (v100<=12) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==13) then v73[v99[3]]=v97[v99[2]];else for v330=v99[2],v99[120 -(32 + 85) ] do v97[v330]=nil;end end elseif (v100<=15) then v97[v99[2]]=v72[v99[3]];elseif (v100>16) then v97[v99[2]]=v99[3];else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=20) then if (v100<=18) then v97[v99[2]]= #v97[v99[3]];elseif (v100==19) then v97[v99[2 + 0 ]][v97[v99[1 + 2 ]]]=v99[4];else local v210=0;local v211;while true do if (v210==0) then v211=v99[2];v97[v211]=v97[v211](v21(v97,v211 + (1414 -(447 + 966)) ,v92));break;end end end elseif (v100<=21) then local v141=0;local v142;while true do if (v141==0) then v142=v99[2];do return v21(v97,v142,v92);end break;end end elseif (v100==22) then local v212=0;local v213;local v214;local v215;while true do if (v212==1) then v215=v99[1820 -(1703 + 114) ];for v424=702 -(376 + 325) ,v215 do v214[v424]=v97[v213 + v424 ];end break;end if (0==v212) then v213=v99[5 -3 ];v214=v97[v213];v212=1;end end else local v216=0;local v217;local v218;while true do if (v216==0) then v217=v99[2];v218=v97[v217];v216=1;end if (v216==1) then for v427=v217 + (1 -0) ,v92 do v15(v218,v97[v427]);end break;end end end elseif (v100<=35) then if (v100<=29) then if (v100<=26) then if (v100<=24) then local v143=0;local v144;local v145;while true do if (v143==1) then for v369=v144 + (2 -1) ,v99[4] do v145=v145   .. v97[v369] ;end v97[v99[2]]=v145;break;end if (0==v143) then v144=v99[3];v145=v97[v144];v143=1;end end elseif (v100>25) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=27) then v73[v99[3]]=v97[v99[2]];elseif (v100>(985 -(892 + 65))) then local v221=v99[2];v97[v221](v21(v97,v221 + 1 ,v99[3]));else v91=v99[3];end elseif (v100<=32) then if (v100<=30) then local v148=0;local v149;local v150;while true do if (v148==1) then v97[v149 + 1 ]=v150;v97[v149]=v150[v99[4]];break;end if (v148==0) then v149=v99[2];v150=v97[v99[3]];v148=1;end end elseif (v100==31) then local v223=0;local v224;local v225;while true do if (v223==1) then for v428=v224 + 1 ,v99[1 + 2 ] do v15(v225,v97[v428]);end break;end if (v223==0) then v224=v99[4 -2 ];v225=v97[v224];v223=1;end end else local v226=v99[2];local v227=v97[v99[3]];v97[v226 + 1 ]=v227;v97[v226]=v227[v99[8 -4 ]];end elseif (v100<=33) then v97[v99[2]]();elseif (v100==34) then v97[v99[2]]=v97[v99[3]];elseif (v97[v99[3 -1 ]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=41) then if (v100<=38) then if (v100<=36) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[4 -1 ];end elseif (v100==37) then do return;end else v91=v99[353 -(87 + 263) ];end elseif (v100<=39) then local v151=v99[2];local v152={};for v183=181 -(67 + 113) , #v96 do local v184=v96[v183];for v235=0, #v184 do local v236=0;local v237;local v238;local v239;while true do if (v236==0) then v237=v184[v235];v238=v237[1];v236=1;end if (v236==1) then v239=v237[2];if ((v238==v97) and (v239>=v151)) then v152[v239]=v238[v239];v237[1 + 0 ]=v152;end break;end end end end elseif (v100>40) then v97[v99[2]]=v73[v99[3]];else v97[v99[4 -2 ]]=v97[v99[3]];end elseif (v100<=44) then if (v100<=42) then local v153=v99[2];v97[v153]=v97[v153](v97[v153 + (15 -(9 + 5)) ]);elseif (v100>(32 + 11)) then v97[v99[7 -5 ]]={};else local v245=0;local v246;while true do if (v245==0) then v246=v99[2];v97[v246]=v97[v246]();break;end end end elseif (v100<=(997 -(802 + 150))) then v72[v99[379 -(85 + 291) ]]=v97[v99[2]];elseif (v100>46) then if (v97[v99[1267 -(243 + 1022) ]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v72[v99[3]];end elseif (v100<=(270 -199)) then if (v100<=59) then if (v100<=53) then if (v100<=50) then if (v100<=48) then local v157=0;local v158;while true do if (v157==0) then v158=v99[2];v97[v158](v97[v158 + 1 ]);break;end end elseif (v100==(131 -82)) then v97[v99[3 -1 ]]=v73[v99[3]];else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=51) then v97[v99[2]]=v97[v99[3]]%v97[v99[4 + 0 ]] ;elseif (v100==52) then local v253=0;local v254;local v255;local v256;while true do if (1==v253) then v256=v97[v254] + v255 ;v97[v254]=v256;v253=2;end if (2==v253) then if (v255>0) then if (v256<=v97[v254 + 1 ]) then local v464=0;while true do if (v464==0) then v91=v99[3 + 0 ];v97[v254 + 3 ]=v256;break;end end end elseif (v256>=v97[v254 + 1 ]) then v91=v99[3];v97[v254 + 3 ]=v256;end break;end if (v253==0) then v254=v99[2];v255=v97[v254 + 2 ];v253=1;end end else local v257=v99[2];local v258,v259=v90(v97[v257](v21(v97,v257 + 1 ,v92)));v92=(v259 + v257) -(998 -(915 + 82)) ;local v260=0;for v342=v257,v92 do v260=v260 + (1181 -(1123 + 57)) ;v97[v342]=v258[v260];end end elseif (v100<=(46 + 10)) then if (v100<=54) then do return v97[v99[2]]();end elseif (v100==55) then v97[v99[2]][v97[v99[257 -(163 + 91) ]]]=v99[4];else local v263=0;local v264;while true do if (0==v263) then v264=v99[2];do return v97[v264](v21(v97,v264 + 1 ,v99[3]));end break;end end end elseif (v100<=57) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==58) then local v265=v99[2];local v266=v97[v265];local v267=v99[3];for v345=2 -1 ,v267 do v266[v345]=v97[v265 + v345 ];end elseif  not v97[v99[1932 -(1869 + 61) ]] then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif (v100<=65) then if (v100<=62) then if (v100<=60) then v97[v99[2 + 0 ]][v99[3]]=v99[4];elseif (v100==(80 -19)) then local v268=v88[v99[3]];local v269;local v270={};v269=v18({},{[v7("\137\138\239\222\178\176\254","\176\214\213\134")]=function(v348,v349) local v350=0;local v351;while true do if (v350==0) then v351=v270[v349];return v351[1][v351[2]];end end end,[v7("\203\146\184\209\191\95\87\240\168\174","\57\148\205\214\180\200\54")]=function(v352,v353,v354) local v355=0;local v356;while true do if (v355==0) then v356=v270[v353];v356[1188 -(1069 + 118) ][v356[2]]=v354;break;end end end});for v357=1,v99[8 -4 ] do local v358=0;local v359;while true do if (v358==1) then if (v359[1]==34) then v270[v357-1 ]={v97,v359[3]};else v270[v357-(1 + 0) ]={v72,v359[1 + 2 ]};end v96[ #v96 + 1 ]=v270;break;end if (v358==0) then v91=v91 + (1 -0) ;v359=v87[v91];v358=1;end end end v97[v99[2]]=v40(v268,v269,v73);else local v272=0;local v273;local v274;local v275;while true do if (0==v272) then v273=v88[v99[3]];v274=nil;v272=1;end if (v272==2) then for v434=792 -(368 + 423) ,v99[4] do local v435=0;local v436;while true do if (v435==0) then v91=v91 + 1 ;v436=v87[v91];v435=1;end if (v435==1) then if (v436[1]==34) then v275[v434-1 ]={v97,v436[3]};else v275[v434-1 ]={v72,v436[21 -(10 + 8) ]};end v96[ #v96 + 1 ]=v275;break;end end end v97[v99[2]]=v40(v273,v274,v73);break;end if (v272==1) then v275={};v274=v18({},{[v7("\45\194\60\58\114\23\229","\22\114\157\85\84")]=function(v437,v438) local v439=0;local v440;while true do if (v439==0) then v440=v275[v438];return v440[1 -0 ][v440[2 + 0 ]];end end end,[v7("\251\244\29\193\74\255\166\192\206\11","\200\164\171\115\164\61\150")]=function(v441,v442,v443) local v444=v275[v442];v444[1][v444[2]]=v443;end});v272=2;end end end elseif (v100<=(242 -179)) then local v163=0;local v164;while true do if (v163==0) then v164=v99[2 + 0 ];do return v97[v164](v21(v97,v164 + 1 ,v99[3]));end break;end end elseif (v100==64) then v97[v99[2]]={};else local v277=0;local v278;while true do if (v277==0) then v278=v99[1476 -(1329 + 145) ];v97[v278](v21(v97,v278 + 1 ,v92));break;end end end elseif (v100<=68) then if (v100<=66) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==67) then local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==0) then v281=v99[2];v282,v283=v90(v97[v281](v97[v281 + 1 ]));v280=1;end if (v280==1) then v92=(v283 + v281) -1 ;v284=0;v280=2;end if (v280==2) then for v446=v281,v92 do local v447=0;while true do if (v447==0) then v284=v284 + 1 ;v97[v446]=v282[v284];break;end end end break;end end else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=69) then local v165=v99[2];local v166=v97[v165];local v167=v97[v165 + 2 ];if (v167>0) then if (v166>v97[v165 + 1 ]) then v91=v99[445 -(416 + 26) ];else v97[v165 + 3 ]=v166;end elseif (v166<v97[v165 + 1 ]) then v91=v99[3];else v97[v165 + 3 ]=v166;end elseif (v100==(223 -153)) then local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==2) then for v448=v287,v92 do local v449=0;while true do if (v449==0) then v290=v290 + 1 ;v97[v448]=v288[v290];break;end end end break;end if (v286==0) then v287=v99[2];v288,v289=v90(v97[v287](v97[v287 + 1 ]));v286=1;end if (v286==1) then v92=(v289 + v287) -(972 -(140 + 831)) ;v290=0;v286=2;end end else v97[v99[1852 -(1409 + 441) ]]=v99[3] + v97[v99[4]] ;end elseif (v100<=83) then if (v100<=77) then if (v100<=(32 + 42)) then if (v100<=72) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100>73) then local v292=0;local v293;local v294;local v295;while true do if (v292==0) then v293=v99[2];v294=v97[v293];v292=1;end if (1==v292) then v295=v97[v293 + 2 ];if (v295>(0 + 0)) then if (v294>v97[v293 + 1 ]) then v91=v99[3];else v97[v293 + (441 -(262 + 176)) ]=v294;end elseif (v294<v97[v293 + 1 ]) then v91=v99[3];else v97[v293 + 3 ]=v294;end break;end end else local v296=0;local v297;while true do if (v296==0) then v297=v99[2];v97[v297]=v97[v297]();break;end end end elseif (v100<=(1796 -(345 + 1376))) then local v169=0;local v170;while true do if (v169==0) then v170=v99[2];v97[v170]=v97[v170](v97[v170 + 1 ]);break;end end elseif (v100>76) then v97[v99[2]]=v99[691 -(198 + 490) ];else v97[v99[2]][v97[v99[3]]]=v97[v99[4]];end elseif (v100<=80) then if (v100<=78) then local v171=v99[2];v97[v171]=v97[v171](v21(v97,v171 + (1 -0) ,v92));elseif (v100>79) then v97[v99[2]]=v99[441 -(145 + 293) ] + v97[v99[4]] ;else v97[v99[2]][v99[3]]=v97[v99[4]];end elseif (v100<=81) then local v173=0;local v174;local v175;local v176;while true do if (v173==2) then if (v175>(1486 -(998 + 488))) then if (v176<=v97[v174 + 1 ]) then v91=v99[3];v97[v174 + 3 ]=v176;end elseif (v176>=v97[v174 + 1 ]) then local v458=0;while true do if (v458==0) then v91=v99[3];v97[v174 + 3 ]=v176;break;end end end break;end if (v173==1) then v176=v97[v174] + v175 ;v97[v174]=v176;v173=2;end if (v173==0) then v174=v99[432 -(44 + 386) ];v175=v97[v174 + 2 ];v173=1;end end elseif (v100>(362 -280)) then v97[v99[4 -2 ]]=v97[v99[3]] + v99[4] ;else do return;end end elseif (v100<=89) then if (v100<=86) then if (v100<=84) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;elseif (v100>85) then local v306=0;local v307;while true do if (v306==0) then v307=v99[2];v97[v307]=v97[v307](v21(v97,v307 + 1 ,v99[3]));break;end end else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=87) then local v178=0;local v179;local v180;while true do if (v178==0) then v179=v99[2];v180={};v178=1;end if (v178==1) then for v378=1, #v96 do local v379=v96[v378];for v412=0, #v379 do local v413=v379[v412];local v414=v413[1];local v415=v413[1 + 1 ];if ((v414==v97) and (v415>=v179)) then local v459=0;while true do if (v459==0) then v180[v415]=v414[v415];v413[1]=v180;break;end end end end end break;end end elseif (v100==88) then v97[v99[1208 -(696 + 510) ]][v99[3]]=v97[v99[7 -3 ]];else local v311=v99[2];local v312=v97[v311];for v367=v311 + 1 ,v92 do v15(v312,v97[v367]);end end elseif (v100<=92) then if (v100<=90) then v72[v99[3 + 0 ]]=v97[v99[2]];elseif (v100==91) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v313=0;local v314;local v315;local v316;local v317;while true do if (v313==2) then for v450=v314,v92 do v317=v317 + (1139 -(116 + 1022)) ;v97[v450]=v315[v317];end break;end if (v313==0) then v314=v99[2];v315,v316=v90(v97[v314](v21(v97,v314 + 1 ,v99[3])));v313=1;end if (1==v313) then v92=(v316 + v314) -(773 -(201 + 571)) ;v317=0;v313=2;end end end elseif (v100<=94) then if (v100>93) then local v318=0;local v319;while true do if (v318==0) then v319=v99[2];v97[v319](v21(v97,v319 + (4 -3) ,v92));break;end end else local v320=0;local v321;while true do if (v320==0) then v321=v99[2];v97[v321]=v97[v321](v21(v97,v321 + 1 + 0 ,v99[1 + 2 ]));break;end end end elseif (v100>95) then do return v97[v99[2]]();end else local v322=v99[6 -4 ];v97[v322](v21(v97,v322 + 1 ,v99[3]));end v91=v91 + 1 ;break;end if (v106==0) then v99=v87[v91];v100=v99[1];v106=1;end end end end;end return v40(v39(),{},v28)(...);end return v23("LOL!",v17(),...);
